/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;


import java.sql.Connection;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.concurrent.TimeUnit;

import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class ReturnBook extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReturnBook
     */
    public ReturnBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtxtsname = new javax.swing.JTextField();
        jtxtsbranch = new javax.swing.JTextField();
        jtxtsyear = new javax.swing.JTextField();
        jtxtbid = new javax.swing.JTextField();
        jtxtbname = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jtxtsid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtxtSearchbid = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtxtsearchbname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtxtfine = new javax.swing.JTextField();
        jtxtissue = new javax.swing.JTextField();
        jtxtduedate = new javax.swing.JTextField();
        jtxtreturndate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 698));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Student Id :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Student Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel3.setText("Student Branch");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel4.setText("Student Year");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel5.setText("Book Id");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel6.setText("Book Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, -1, -1));

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel9.setText("Issue Date");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, -1, -1));

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel10.setText("Due Date");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, -1, -1));

        jtxtsname.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 157, -1));

        jtxtsbranch.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtsbranch, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 157, -1));

        jtxtsyear.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtsyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 157, -1));

        jtxtbid.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 157, -1));

        jtxtbname.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtbname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 157, -1));

        jButton2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton2.setText("Return Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, -1, -1));

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel11.setText("Return Date");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, -1, -1));

        jtxtsid.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jtxtsid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtsidActionPerformed(evt);
            }
        });
        jtxtsid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtsidKeyTyped(evt);
            }
        });
        getContentPane().add(jtxtsid, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 134, -1));

        jLabel12.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel12.setText("Search Book by Book Id or Book Name :-");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 30, -1, -1));

        jLabel13.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel13.setText("Book Id");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, -1, -1));

        jtxtSearchbid.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jtxtSearchbid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtSearchbidActionPerformed(evt);
            }
        });
        jtxtSearchbid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtSearchbidKeyTyped(evt);
            }
        });
        getContentPane().add(jtxtSearchbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 82, 132, -1));

        jLabel14.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel14.setText("Book Name");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 130, -1, -1));

        jtxtsearchbname.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jtxtsearchbname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtsearchbnameKeyTyped(evt);
            }
        });
        getContentPane().add(jtxtsearchbname, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 127, 132, -1));

        jTable1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 220, 390, 295));

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel7.setText("Fine");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 540, 64, -1));

        jtxtfine.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jtxtfine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfineFocusGained(evt);
            }
        });
        jtxtfine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtfineActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtfine, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 149, -1));

        jtxtissue.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 157, -1));

        jtxtduedate.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        getContentPane().add(jtxtduedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 149, -1));

        jtxtreturndate.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jtxtreturndate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreturndateFocusGained(evt);
            }
        });
        getContentPane().add(jtxtreturndate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 149, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/bb.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtsidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtsidKeyTyped
        // TODO add your handling code here:
        
         if (evt.getKeyChar()== '\n'){
             
           String newid = jtxtsid.getText().trim();
        int id = Integer.parseInt(newid);
      
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management", "root", "");
                       
            String sql = "select * from issue_book where s_id= '"+id+"' ";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            int status=0;
            
            if(rs.next()){
                status=1;
                jtxtsname.setText(rs.getString("s_name"));
               
                jtxtsbranch.setText(rs.getString("s_branch"));
                 jtxtsyear.setText(rs.getString("s_year"));
                
           
               
                
               
            
            
            }
            if(status==0)
                JOptionPane.showMessageDialog(null,"Student id is not found");
            
            
       
                               
        } catch (Exception ex) {
            System.out.println("Exception "+ex);
        }
    }           
             
            
    }//GEN-LAST:event_jtxtsidKeyTyped

    private void jtxtsidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtsidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtsidActionPerformed

    private void jtxtSearchbidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSearchbidKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar()== '\n'){
              int status=0;
                 
                  try{
                   
                    
                  String id=jtxtSearchbid.getText().trim();
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management","root","");
                   
                   String sql="select *from issue_book where b_id like '%"+id+"%' " ;  //%a starting word  // a% ending word
                    
                   PreparedStatement pst=con.prepareStatement(sql);
                   
                  ResultSet rs=pst.executeQuery();  
                  
                   if(rs.isBeforeFirst()){  // Check if there are any rows in the result set
                        status=1;
                   
                   jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                   
                  
                     
                  
                   } if(status==0){
                JOptionPane.showMessageDialog(null,"Book Id is not Available");
                }
            
       
                               
        } catch(Exception ex){
            System.out.println("ex"+ex);
        
              }
             
    }        
                                      

    }//GEN-LAST:event_jtxtSearchbidKeyTyped

    private void jtxtsearchbnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtsearchbnameKeyTyped
        // TODO add your handling code here:
        
         if (evt.getKeyChar()== '\n'){
                 
                 int status=0;
                  try{
             
                  String name=jtxtsearchbname.getText().trim();
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management","root","");
                   
                   String sql="select *from issue_book where b_name like '%"+name+"%'" ;  //%a starting word  // a% ending word
                    
                   PreparedStatement pst=con.prepareStatement(sql);
                   
                  ResultSet rs=pst.executeQuery();   
                  
                   if(rs.next()){
                   
                       status=1;
                   jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                     }
                   
                  if(status==0)
                JOptionPane.showMessageDialog(null,"Book is not Available");
            
            
       
                               
        }
        catch(Exception ex){
            System.out.println("ex"+ex);
        
              }
         }
    }//GEN-LAST:event_jtxtsearchbnameKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
         TableModel model =  jTable1.getModel();
         int row =  jTable1.getSelectedRow();
         
          int id = (int) model.getValueAt(row, 4);
          
          String name=(String)model.getValueAt(row, 5);
          
       String issueDate=(String) model.getValueAt(row,7);
       
        String dueDate=(String) model.getValueAt(row,8);
        
       
   
          
          jtxtbid.setText(""+id);
          jtxtbname.setText(""+name);
          
          jtxtsearchbname.setText(""+name);
          jtxtSearchbid.setText(""+id);
          
          jtxtissue.setText(""+issueDate);
          
          jtxtduedate.setText(""+dueDate);
          
      /*     SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
            String formattedIssueDate = dFormat.format(java.sql.Date.valueOf(issueDate)); // Format issue date
           String formattedDueDate = dFormat.format(java.sql.Date.valueOf(dueDate)); // Format due date

    // If you want to set these dates back to JDateChooser
    jDateChooser1.setDate(java.sql.Date.valueOf(issueDate)); // Set issue date in JDateChooser
    jDateChooser2.setDate(java.sql.Date.valueOf(dueDate));  
        */
          
           
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        try{
             Class.forName("com.mysql.jdbc.Driver");
             Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management","root","");
             
             String sql="update issue_book set r_date='"+jtxtreturndate.getText()+"', s_status='0', i_fine='"+jtxtfine.getText()+"' where s_id='"+jtxtsid.getText()+"' AND  b_id='"+jtxtbid.getText()+"'";
            
             PreparedStatement pst=con.prepareStatement(sql);
                   int i=pst.executeUpdate();
                   if(i>0){
                       JOptionPane.showMessageDialog(null,"Return book  suceessfully");
                       
                      
                       con.close();
                       pst.close();
                     
                       
                       
                   }
        }catch(Exception ex){
            System.out.println("ex"+ex);
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jtxtSearchbidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtSearchbidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtSearchbidActionPerformed

    private void jtxtfineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfineFocusGained
        // TODO add your handling code here:  
       
   try {
   
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

   
    String due_Date = jtxtduedate.getText().trim();
    String return_Date = jtxtreturndate.getText().trim();

    java.util.Date dueDate = dateFormat.parse(due_Date);
    java.util.Date returnDate = dateFormat.parse(return_Date);

    // Calculate the difference in milliseconds between return date and due date
    long diffInMillies = returnDate.getTime() - dueDate.getTime();

    // Convert the difference to days
    long diffInDays = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

    double fine = 0.0;

   
    if (diffInDays > 15) {
        
        fine = (diffInDays - 15) * 5.0;
    }

   
    jtxtfine.setText(""+fine);

} catch (Exception ex) {
    
       System.out.println("ex"+ex);
    jtxtfine.setText("Invalid date format");
}

    }//GEN-LAST:event_jtxtfineFocusGained

    private void jtxtfineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfineActionPerformed
        // TODO add your handling code here:
        
       
        
        
    }//GEN-LAST:event_jtxtfineActionPerformed

    private void jtxtreturndateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtreturndateFocusGained
        // TODO add your handling code here:
         
        LocalDate returndate = LocalDate.now();
         
         jtxtreturndate.setText(""+returndate);
         
           jtxtreturndate.setEditable(true);
         
    }//GEN-LAST:event_jtxtreturndateFocusGained
 
   

 

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtxtSearchbid;
    private javax.swing.JTextField jtxtbid;
    private javax.swing.JTextField jtxtbname;
    private javax.swing.JTextField jtxtduedate;
    private javax.swing.JTextField jtxtfine;
    private javax.swing.JTextField jtxtissue;
    private javax.swing.JTextField jtxtreturndate;
    private javax.swing.JTextField jtxtsbranch;
    private javax.swing.JTextField jtxtsearchbname;
    private javax.swing.JTextField jtxtsid;
    private javax.swing.JTextField jtxtsname;
    private javax.swing.JTextField jtxtsyear;
    // End of variables declaration//GEN-END:variables
}
